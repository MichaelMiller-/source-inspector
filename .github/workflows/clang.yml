name: Clang

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        version: [ 16, 17, 18 ]
        config: [ Debug, Release ]

    steps:
      - uses: actions/checkout@master

      - name: Install Compiler
        run: |
          sudo apt-get update 
          wget https://apt.llvm.org/llvm.sh
          chmod u+x llvm.sh
          sudo ./llvm.sh ${{matrix.version}}
          clang --version

      - name: Prepare system
        run: |
          sudo apt install -y libboost-all-dev
          sudo apt install -y qt5-default

      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Install Dependencies
        shell: bash
        working-directory: ${{runner.workspace}}
        run: |
          git clone https://github.com/Microsoft/vcpkg.git 
          cd vcpkg
          ./bootstrap-vcpkg.sh
          ./vcpkg install catch2
          ./vcpkg install tinyxml
          ./vcpkg install sqlite3
          ./vcpkg install llvm[enable-rtti] --recurse

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: |
          export CC=`which clang-${{matrix.version}}`
          export CXX=`which clang-${{matrix.version}}`
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.config}} -DCMAKE_TOOLCHAIN_FILE=${{runner.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --config ${{matrix.config}}

      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: ctest --build-config ${{matrix.config}}
